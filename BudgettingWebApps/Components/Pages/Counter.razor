@page "/counter"
@using System.Security.Claims

@rendermode InteractiveServer
@inject IJSRuntime js

<PageTitle>Counter</PageTitle>

<h1>Counter</h1>

<p role="status">Current count: @currentCount</p>

<button class="btn btn-primary" @onclick="IncrementCount">Click me</button>

<AuthorizeView>
    <Authorized>
        <br /><br />
        <button class="btn btn-outline-primary" @onclick="DisplayGreatingAlert">Display Creating Alert</button>
    </Authorized>
</AuthorizeView>

@code {
    [CascadingParameter]
    private Task<AuthenticationState> authenticationStateTask { get; set; }

    private int currentCount = 0;

    private void IncrementCount()
    {
        currentCount++;
    }
    private async Task DisplayGreatingAlert()
    {
        var authenticationState = await authenticationStateTask;
        var user = authenticationState.User;

        var userName = user.Identity?.Name;
        var userIdClaim = user.FindFirst(ClaimTypes.PrimarySid);
        var userId = userIdClaim?.Value;


        var message = $"Hello {userName} and your id: {userId}";
        await js.InvokeVoidAsync("alert", message);
    }
}
