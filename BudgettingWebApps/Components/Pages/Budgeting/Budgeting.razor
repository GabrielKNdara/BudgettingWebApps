@page "/budgeting"
@rendermode InteractiveServer
@using BudgettingWebApps.Models
@using BudgettingWebApps.Components.Pages.Budgeting.Components
@using BudgettingWebApps.Reposiotories
@using System.Security.Claims

<h3>Budgeting</h3>
<table class="table">
    <thead>
        <tr>
            <th>Income Name</th>
            <th>Amount</th>
            <th>Date</th>
        </tr>
    </thead>
    <tbody>
        @foreach(var income in _income)
        {
            <IncomeRows @key="income" Income="@income"/>
        }
    </tbody>
</table>

@code {
        [CascadingParameter]
        private Task<AuthenticationState> authenticationStateTask { get; set; }

        IEnumerable<IncomeDto> _income = new List<IncomeDto>();

        [Inject]
        private IincomeRepository repository { get; set; } = default!;

    protected override async Task OnInitializedAsync()
    {
        var authenticationState = await authenticationStateTask;
        var user = authenticationState.User;

        var userIdClaim = user.FindFirst(ClaimTypes.PrimarySid);
        var userId = userIdClaim?.Value;

        var currentuser = Convert.ToInt16(userId);

        _income = await repository.GetIncome(currentuser);
        await base.OnInitializedAsync();
    }

}
