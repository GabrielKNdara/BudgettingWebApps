@page "/budgeting"
@rendermode InteractiveServer
@using BudgettingWebApps.Models
@using BudgettingWebApps.Components.Pages.Budgeting.Components
@using BudgettingWebApps.Reposiotories
@using System.Security.Claims
@using BudgettingWebApps.Components.Pages.Budgeting.Dialogs

<h3>Budgeting</h3>
<button @onclick="ShowAddIncomeDialog">Add Income</button>

<AddIncomeDialog IsVisible="@isAddIncomeDialogVisible" OnClose="CloseAddIncomeDialog" OnSubmit="HandleIncomeSubmit" />

<table class="table">
    <thead>
        <tr>
            <th>Income Name</th>
            <th>Amount</th>
            <th>Date</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var income in _income)
        {
            <IncomeRows @key="income" Income="@income" />
        }
    </tbody>
</table>

@code {
    [CascadingParameter]
    private Task<AuthenticationState> authenticationStateTask { get; set; }

    IEnumerable<IncomeDto> _income = new List<IncomeDto>();

    [Inject]
    private IincomeRepository repository { get; set; } = default!;
    int currentUser;

    protected override async Task OnInitializedAsync()
    {
        var authenticationState = await authenticationStateTask;
        var user = authenticationState.User;

        var userIdClaim = user.FindFirst(ClaimTypes.PrimarySid);
        var userId = userIdClaim?.Value;

        currentUser = Convert.ToInt16(userId);

        _income = await repository.GetIncome(currentUser);
        await base.OnInitializedAsync();
    }

    private bool isAddIncomeDialogVisible = false;
    [Parameter]
    public string loginUser { get; set; } = string.Empty;
    
    private void ShowAddIncomeDialog()
    {
       // currentUser;
        isAddIncomeDialogVisible = true;
        StateHasChanged();
        //  Console.WriteLine("Show button have been clicked");
    }

    private void CloseAddIncomeDialog()
    {
        isAddIncomeDialogVisible = false;
    }

    private void HandleIncomeSubmit((string IncomeSource, decimal Amount) incomeDetails)
    {
        // Handle the submitted income details (e.g., add to a list, save to database)
      // await repository.CreateNewIncome();
        Console.WriteLine($"Income Source: {incomeDetails.IncomeSource}, Amount: {incomeDetails.Amount}");
        CloseAddIncomeDialog();
    }
}
