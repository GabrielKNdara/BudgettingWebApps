@page "/forgotpassword"
@using BudgettingWebApps.Models
@using BudgettingWebApps.Reposiotories
@inject NavigationManager navigationManager

<div class="row">
    <div class="col-lg-4 offset-lg-4 pb-4 border">
        <EditForm Model="@currentCredentials" OnValidSubmit="Authenticate" FormName="ForgotPasswordForm">
            <DataAnnotationsValidator />
            <div class="mb-3 text-center flex-column">
                <img src="/Images/Logo.png" style="max-height : 5rem;" />
                <h3>Forgot Password</h3>
            </div>
            <div class="mb-3">
                <label>User Name</label>
                <InputText @bind-Value="currentCredentials.Username" class="form-control" placeholder="Username" />
                <ValidationMessage For="() => currentCredentials.Username" />
            </div>
            <div class="mb-3">
                <label>New Password</label>
                <InputText @bind-Value="currentCredentials.Password" placeholder="New password" type="password" class="form-control" />
            </div>
            <div class="mb-3 text-center">
                <span class="text-danger">@errorMessage</span>
            </div>
            <div class="mb-3 d-grid gap-2">
                <button type="submit" class="btn btn-primary">Change Password</button>
            </div>

        </EditForm>
    </div>
</div>

@code {
    [CascadingParameter]
    public HttpContext? httpContext{ get; set; }

    [SupplyParameterFromForm]
    public ForgotPasswordDto currentCredentials { get; set; } = new();
    [Inject]
    private IUserRepository _userRepository { get; set; } = default!;

    private string? errorMessage;

    private async Task Authenticate()
    {
        var user = await _userRepository.UpdateUserPassword(currentCredentials);
        if(user ==0)
        {
            errorMessage = "failed to change password";
        }
        else
        {
            navigationManager.NavigateTo("/");
        }
    }


}
